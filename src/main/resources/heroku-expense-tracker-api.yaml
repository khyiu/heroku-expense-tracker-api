openapi: 3.0.3
info:
  title: Heroku Expense Tracker
  description: API for Heroku Expense Tracker, a hobby project to manage personal expenses
  version: 1.1.0
servers:
  - url: 'https://heroku-expense-tracker-back.herokuapp.com/'
    description: Production environment
tags:
  - name: Expenses
    description: Operations related to a set of expenses
  - name: Expense
    description: Operations related to a specific expense
paths:
  /expenses:
    post:
      tags:
        - Expenses
      operationId: registerExpense
      summary: Register an expense.
      description: Registers an expense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseRequest'
        required: true
      responses:
        201:
          description: Expense has been properly registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        400:
          description: Request does not comply with the data structure as defined in the API
    get:
      tags:
        - Expenses
      operationId: getExpenses
      summary: Retrieve expenses
      description: Retrieves expenses belonging to the current user, in a paginated way. This operation also supports filtering based on
        tag(s) and partial description
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
            minimum: 1
          required: true
        - in: query
          name: pageNumber
          schema:
            type: integer
            minimum: 1
          required: true
        - in: query
          name: tagFilters
          schema:
            type: array
            items:
              type: string
        - in: query
          name: descriptionFilter
          schema:
            type: string
      responses:
        200:
          description: Retrieval is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseListResponse'
        401:
          description: User isn't authenticated

  /expense/{id}:
    get:
      tags:
        - Expense
      operationId: getExpense
      summary: Retrieve an expense based on its identifier
      description: Fetch the expense that is identitied by `id` and belongs to the current user
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: e0ba836f-5831-40bb-88a7-ca3e1ecf1526
          required: true
          description: Identifier of the expense to be retrieved
      responses:
        200:
          description: Retrieved expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        401:
          description: User isn't authenticated
        403:
          description: User is authenticated but isn't allowed to access the specified expensed
        404:
          description: The specified expense does not exist

    put:
      tags:
        - Expense
      operationId: updateExpense
      summary: Update an existing expense
      description: Update the expense that is identified by `id` and belongs to the current user
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: e0ba836f-5831-40bb-88a7-ca3e1ecf1526
          required: true
          description: Identifier of the expense to be updated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseRequest'
        required: true
      responses:
        200:
          description: Expense has been properly updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        400:
          description: Request does not comply with the data structure as defined in the API
        401:
          description: User isn't authenticated
        403:
          description: User is authenticated but isn't allowed to access the specified expensed
        404:
          description: The expense identified by `id` does not exist
        409:
          description: The expense to be updated has already been updated by an other request. The current current needs to reload it

    delete:
      tags:
        - Expense
      operationId: deleteExpense
      summary: Delete an existing expense
      description: Delete the expense that is identfied by `id`
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: e0ba836f-5831-40bb-88a7-ca3e1ecf1526
          required: true
          description: Identifier of the expense to be updated
      responses:
        200:
          description: Expense has been properly deleted
        400:
          description: Request does not comply with the data structure as defined in the API
        401:
          description: User isn't authenticated
        403:
          description: User is authenticated but isn't allowed to access the specified expensed
        404:
          description: The expense identified by `id` does not exist
        409:
          description: The expense to be updated has already been updated by an other request. The current current needs to reload it


components:
  schemas:
    ExpenseRequest:
      description: Request object representing an expense to be registered in the application
      type: object
      properties:
        date:
          type: string
          format: date
          example: '2021-08-25'
        amount:
          type: number
          example: 9.95
          minimum: -999999.99
          maximum: 999999.99
        tags:
          type: array
          items:
            type: string
          minItems: 1
          minLength: 1
          maxLength: 50
          example: groceries, shopping
        description:
          type: string
          maxLength: 1024
        paidWithCreditCard:
          type: boolean
        creditCardStatementIssued:
          type: boolean
        version:
          type: integer
      required:
        - date
        - amount
        - tags

    ExpenseResponse:
      description: Representation of an expense that has been persisted in the system.
      allOf:
        - $ref: '#/components/schemas/ExpenseRequest'
        - type: object
          properties:
            id:
              type: string
          required:
            - id

    ExpenseListResponse:
        description: Paginated response that is returned to the user upon retrieval of his expenses
        type: object
        properties:
          pageNumber:
            type: integer
          pageSize:
            type: integer
          totalNumberOfItems:
            type: integer
          items:
            type: array
            items:
              $ref: '#/components/schemas/ExpenseResponse'
